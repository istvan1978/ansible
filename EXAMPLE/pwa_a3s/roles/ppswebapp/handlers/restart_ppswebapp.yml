- name: Get PID
  shell: pgrep -f "{{ PPSWEBAPP_PROCESS }}"
  register: ppswebapp_pid

- name: Get PATH by PID
  shell: pwdx "{{ ppswebapp_pid.stdout }}" | awk {'print $2'}
  register: ppswebapp_path

- name: Check owner of ppswebapp folder
  stat:
    path: "{{ ppswebapp_path.stdout }}"
  register: owner_ppswebapp

- name: Check version of ppswebapp is compatible
  stat:
    path: "{{ppswebapp_path.stdout}}/{{PPSWEBAPP_WAR}}"
  register: version_ppswebapp

- name: Restart ppswebapp
  shell: ./pwa.sh stop && sleep 3 && ./pwa.sh start
  args:
    chdir: "{{ ppswebapp_path.stdout }}"
    executable: /bin/bash
  become: true
  become_user: "{{ owner_ppswebapp.stat.pw_name }}"
  when: version_ppswebapp.stat.checksum in PPSWEBAPP_COMPATIBLE_VERSIONS_SHA1